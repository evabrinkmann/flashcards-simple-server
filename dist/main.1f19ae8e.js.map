{"version":3,"sources":["main.js"],"names":["inputId","document","querySelector","inputQuestion","inputAnswer","buttonCreate","buttonRead","buttonUpdate","buttonDelete","addEventListener","getCards","value","postCard","question","answer","patchCard","id","deleteCard","fetchCard","data","method","config","headers","body","JSON","stringify","fetch","then","res","json","result","console","log","catch","error"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const inputId = document.querySelector('[name=\"id\"]')\nconst inputQuestion = document.querySelector('[name=\"question\"]')\nconst inputAnswer = document.querySelector('[name=\"answer\"]')\nconst buttonCreate = document.querySelector('[data-js=\"create\"]')\nconst buttonRead = document.querySelector('[data-js=\"read\"]')\nconst buttonUpdate = document.querySelector('[data-js=\"update\"]')\nconst buttonDelete = document.querySelector('[data-js=\"delete\"]')\n\nbuttonRead.addEventListener('click', () => {\n  getCards(inputId.value)\n})\n\nbuttonCreate.addEventListener('click', () => {\n  postCard({ question: inputQuestion.value, answer: inputAnswer.value })\n  inputAnswer.value = ''\n  inputQuestion.value = ''\n})\n\nbuttonUpdate.addEventListener('click', () => {\n  patchCard(inputId.value, {\n    question: inputQuestion.value,\n    answer: inputAnswer.value,\n    id: inputId.value,\n  })\n})\n\nbuttonDelete.addEventListener('click', () => {\n  deleteCard(inputId.value)\n})\n\nfunction getCards(id = '') {\n  fetchCard({ id })\n}\nfunction postCard(data) {\n  fetchCard({ data, method: 'POST' })\n}\nfunction patchCard(id, data) {\n  fetchCard({ id, data, method: 'PATCH' })\n}\nfunction deleteCard(id) {\n  fetchCard({ id, method: 'DELETE' })\n}\nfunction fetchCard({ id = '', method = 'GET', data }) {\n  const config = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  }\n  fetch('http://localhost:3334/cards/' + id, config)\n    .then(res => res.json())\n    .then(result => console.log(result))\n    .catch(error => console.error(error))\n}\n\n// function deleteCard(id) {\n//   const config = {\n//     method: 'DELETE',\n//   }\n\n//   fetch('http://localhost:3334/cards/', +id, config)\n//     .then(res => res.json())\n//     .then(deleteCard => console.log(deleteCard))\n//     .catch(error => console.error(error))\n//     .finally(() => console.log('Promise settled'))\n// }\n\n// function patchCard(id, data) {\n//   //patch erstellen\n//   const config = {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(data),\n//   }\n\n//   fetch('http://localhost:3334/cards/', +id, data)\n//     .then(res => res.json())\n//     .then(editCard => console.log(editCard))\n//     .catch(error => console.error(error))\n//     .finally(() => console.log('Promise settled'))\n// }\n\n// function postCard(data) {\n//   //post machen an cards heften\n//   const config = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(data),\n//   }\n\n//   fetch('http://localhost:3334/cards/', config)\n//     .then(res => res.json())\n//     .then(createdCards => console.log(createdCards))\n//     .catch(error => console.error(error))\n//     .finally(() => console.log('Promise settled'))\n// }\n\n// function getCards(id = '') {\n//   //returns a promise, fetch automatisch get request\n//   fetch('http://localhost:3334/cards/' + id)\n//     .catch(error => console.error(error))\n//     .then(res => res.json())\n//     .then(cards => renderCards(cards)) //function um mit daten weiterzuarbeiten\n//     .catch(error => console.error(error))\n//     .finally(() => console.log('Promise settled'))\n// }\n\n// function renderCards(cards) {\n//   //render cards in body\n//   console.log(cards)\n// }\n"]}